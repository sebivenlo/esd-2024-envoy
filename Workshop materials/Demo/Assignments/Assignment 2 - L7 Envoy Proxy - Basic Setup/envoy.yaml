static_resources:
  listeners:
    - name: demo_app_listener
      address:
        socket_address: { address: 0.0.0.0, port_value: 8080 }
      filter_chains:
        filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stat_prefix: ingress_http
              route_config:
                name: local_route
                virtual_hosts:
                  - name: local_services
                    domains: ["*"]
                    routes:        
                    # Create the different routes.      
                      # Route to Account Service.

                      # Route to Product Service.

                      # Route to Order Service (Load Balanced).

                      # Route to Frontend Service.

              # Add the http filters

  clusters:
    # Cluster for Frontend Service
    - name: frontend_service
      connect_timeout: 0.25s
      type: STRICT_DNS
      load_assignment:
        cluster_name: frontend_service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address: { address: frontend-service, port_value: 3000 }
    
    # Cluster for Account Service
    - name: account_service
      connect_timeout: 0.25s
      type: STRICT_DNS
      load_assignment:
        cluster_name: account_service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address: { address: account-service, port_value: 3001 }

    # Cluster for Product Service
    - name: product_service
      connect_timeout: 0.25s
      type: STRICT_DNS
      load_assignment:
        cluster_name: product_service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address: { address: product-service, port_value: 3002 }

    # Cluster for Order Service (Load Balanced)
    - name: order_service
      connect_timeout: 0.25s
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: order_service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address: { address: order-service-1, port_value: 3003 }
              - endpoint:
                  address:
                    socket_address: { address: order-service-2, port_value: 3103 }
              - endpoint:
                  address:
                    socket_address: { address: order-service-3, port_value: 3203 }