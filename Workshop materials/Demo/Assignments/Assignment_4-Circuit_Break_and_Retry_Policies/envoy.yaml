static_resources:
  listeners:
    - name: demo_app_listener
      address:
        socket_address: { address: 0.0.0.0, port_value: 8080 }
      filter_chains:
        filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stat_prefix: ingress_http # try http_proxy
              route_config:
                name: local_route
                virtual_hosts:
                  - name: local_services
                    domains: ["*"]
                    routes:
                      # Route to Account Service
                      - match: { prefix: "/account" }
                        route: 
                          cluster: account_service
                          prefix_rewrite: "/"

                      # Route to Product Service
                      - match: { prefix: "/product" }
                        route:
                          cluster: product_service
                          prefix_rewrite: "/"

                      # Route to Order Service (Load Balanced)
                      - match: { prefix: "/orders" }
                        route:
                          cluster: order_service
                          timeout: 3s
                          retry_policy:
                            retry_on: "connect-failure,refused-stream,retriable-status-codes,5xx"
                            num_retries: 3
                            per_try_timeout: 2s

                      # Route to Frontend Service
                      - match: { prefix: "/" }
                        route:
                          cluster: frontend_service
                          prefix_rewrite: "/"

              http_filters:
                - name: envoy.filters.http.router
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
  clusters:
    # Cluster for Frontend Service
    - name: frontend_service
      connect_timeout: 0.25s
      type: STRICT_DNS
      load_assignment:
        cluster_name: frontend_service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address: { address: frontend-service, port_value: 3000 }
    
    # Cluster for Account Service
    - name: account_service
      connect_timeout: 0.25s
      type: STRICT_DNS
      load_assignment:
        cluster_name: account_service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address: { address: account-service, port_value: 3001 }

    # Cluster for Product Service
    - name: product_service
      connect_timeout: 0.25s
      type: STRICT_DNS
      load_assignment:
        cluster_name: product_service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address: { address: product-service, port_value: 3002 }

    # Cluster for Order Service (Load Balanced)
    - name: order_service
      connect_timeout: 0.25s
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      health_checks:
        - timeout: 2s
          interval: 5s
          unhealthy_threshold: 1
          healthy_threshold: 3
          http_health_check:
            path: "/health"
      # Add circuit breakers
      load_assignment:
        cluster_name: order_service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address: { address: order-service-1, port_value: 3003 }
              - endpoint:
                  address:
                    socket_address: { address: order-service-2, port_value: 3103 }
              - endpoint:
                  address:
                    socket_address: { address: order-service-3, port_value: 3203 }